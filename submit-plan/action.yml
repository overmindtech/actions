name: Submit Terraform plan to Overmind
author: https://overmind.tech
branding:
  color: purple
  icon: upload-cloud
description: |
  Uses the Overmind CLI to submit a terraform plan as a new Change to the Overmind API. Results will be posted as a comment on the PR.

  Use the `overmindtech/actions/install` action to install the CLI before this.

  This action requires the location of the results of `terraform show -json $TFPLAN_FILE` passed in as `plan-json`.

  By default this uses the calling PR as Ticket Link for the new Change.
inputs:
  ovm-api-key:
    description: Pass in an overmind token to give access to your account on Overmind
  plan-json:
    description: The location of the terraform plan file (generated from `terraform plan -out=...` and `terraform show -json ...`; defaults to `tfplan.json`)
    default: tfplan.json
  log:
    description: The log level for the job
    default: info
outputs:
  change-url:
    description: "The URL of the created change"
    value: ${{ steps.submit-plan.outputs.change-url }}

  message:
    description: "A markdown formatted message describing the current state of the change"
    value: ${{ steps.submit-plan.outputs.change-url }}

runs:
  using: composite
  steps:
    - name: Create a Change from a terraform plan
      id: submit-plan
      shell: bash
      env:
        OVM_API_KEY: ${{ inputs.ovm-api-key }}
      run: |
        set -xe

        if [ ${{ github.event_name }} -eq pull_request ]; then
          title="$(jq -r .pull_request.title < ${{github.event_path}} )"
          description='This change was automatically created from a PR'
          ticket_link='${{ github.event.pull_request.html_url }}'
        else
          title="$(jq -r .pull_request.title < ${{github.event_path}} )"
          description='This change was automatically created from Github Actions'
          ticket_link='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        fi

        ./overmindtech/ovm-cli submit-plan \
            --title "$title" \
            --description "$description" \
            --ticket-link "$ticket_link" \
            --plan-json '${{ inputs.plan-json }}' \
            --log '${{ inputs.log }}' \
            > ./overmindtech/change-url

        echo "ticket-link=${{ github.event.pull_request.html_url }}" >> $GITHUB_OUTPUT
        echo "${{ github.event.pull_request.html_url }}" >> ./overmindtech/ticket-link
        echo "change-url=$(< ./overmindtech/change-url)" >> $GITHUB_OUTPUT

        ./overmindtech/ovm-cli get-change \
          --change "$(< ./overmindtech/change-url)" \
          --format markdown \
          --log '${{ inputs.log }}' \
          > ./overmindtech/message

        DELIMITER="$(uuidgen)"
        echo "message<<$DELIMITER" >> $GITHUB_OUTPUT
        cat ./overmindtech/message >> $GITHUB_OUTPUT
        echo "$DELIMITER" >> $GITHUB_OUTPUT

    - name: Post change url as sticky comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ steps.submit-plan.outputs.change-url != '' }}
      with:
        header: change
        message: ${{ steps.submit-plan.outputs.message }}

    - name: Upload change-url as file
      uses: actions/upload-artifact@v3
      with:
        name: overmind-change-url.txt
        path: ./overmindtech/change-url

    - name: Upload ticket-link as file
      uses: actions/upload-artifact@v3
      with:
        name: overmind-ticket-link.txt
        path: ./overmindtech/ticket-link
